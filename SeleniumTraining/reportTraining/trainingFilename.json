{
  "stats": {
    "suites": 3,
    "tests": 3,
    "passes": 1,
    "pending": 0,
    "failures": 2,
    "start": "2023-01-09T07:55:01.129Z",
    "end": "2023-01-09T07:55:13.217Z",
    "duration": 12088,
    "testsRegistered": 3,
    "passPercent": 33.33333333333333,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cfd25e40-3217-4d46-9059-c2b5f0b6c012",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "12bba539-87ab-4000-8111-550a0188a0cd",
          "title": "add todo tests",
          "fullFile": "C:\\Selenium\\SeleniumTestingProjects\\SeleniumTraining\\test3.js",
          "file": "\\test3.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "succesfully adds a todo application",
              "fullTitle": "add todo tests succesfully adds a todo application",
              "timedOut": null,
              "duration": 1711,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//Launch Browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n        \n//To fetch some url.\nawait driver?.get(\"https://www.selenium.dev/selenium/web/web-form.html\");\n\n// To send a search query by passing the value in searchString.\nawait driver\n?.findElement(By?.css('.form-control[name=\"my-textarea\"]'))\n?.sendKeys(searchString,Key.RETURN);\n//assertion\nlet todoText = await driver\n?.findElement(By?.css('[name=\"my-select\"] [selected]'))\n?.getText()\n.then(function(value){\n        return value\n});\n        \n// //assertion Node\n// assert.strictEqual(todoText, \"Three\")\n//assert using chai should\ntodoText.should.equal(\"Three\");\n//Something to do \nawait new Promise(res => setTimeout(res, 10000));\nlet title = await driver.getTitle();\nconsole.log('Title is:',todoText);\n        \n//Close the browser\nawait driver.quit();",
              "err": {
                "message": "AssertionError: expected 'Open this select menu' to equal 'Three'",
                "estack": "AssertionError: expected 'Open this select menu' to equal 'Three'\n    at Context.<anonymous> (test3.js:41:33)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- Open this select menu\n+ Three\n"
              },
              "uuid": "39f9c23a-3234-42dc-b2eb-5b6cc3901f19",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "39f9c23a-3234-42dc-b2eb-5b6cc3901f19"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1711,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "9f546992-1578-4944-b29c-01de049f29f8",
          "title": "add todo tests",
          "fullFile": "C:\\Selenium\\SeleniumTestingProjects\\SeleniumTraining\\index.js",
          "file": "\\index.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "succesfully adds a todo application",
              "fullTitle": "add todo tests succesfully adds a todo application",
              "timedOut": null,
              "duration": 1814,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//Launch Browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n        \n//To fetch some url.\nawait driver?.get(\"https://www.selenium.dev/selenium/web/web-form.html\");\n\n// To send a search query by passing the value in searchString.\nawait driver\n?.findElement(By?.css('.form-control[name=\"my-textarea\"]'))\n?.sendKeys(searchString,Key.RETURN);\n//assertion\nlet todoText = await driver\n?.findElement(By?.css('[name=\"my-select\"] [selected]'))\n?.getText()\n.then(function(value){\n        return value\n});\n        \n// //assertion Node\n// assert.strictEqual(todoText, \"Three\")\n//assert using chai should\ntodoText.should.equal(\"Three\");\n//Something to do \nawait new Promise(res => setTimeout(res, 10000));\nlet title = await driver.getTitle();\nconsole.log('Title is:',todoText);\n        \n//Close the browser\nawait driver.quit();",
              "err": {
                "message": "AssertionError: expected 'Open this select menu' to equal 'Three'",
                "estack": "AssertionError: expected 'Open this select menu' to equal 'Three'\n    at Context.<anonymous> (index.js:41:33)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- Open this select menu\n+ Three\n"
              },
              "uuid": "5242343b-5e25-4bcb-9b45-57377603a48b",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5242343b-5e25-4bcb-9b45-57377603a48b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1814,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "fe722d2a-2138-49b4-a5b7-da76b090c01d",
          "title": "add ANOTHER todo tests",
          "fullFile": "C:\\Selenium\\SeleniumTestingProjects\\SeleniumTraining\\anotherTest.js",
          "file": "\\anotherTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "succesfully adds ANOTHER todo application",
              "fullTitle": "add ANOTHER todo tests succesfully adds ANOTHER todo application",
              "timedOut": null,
              "duration": 11728,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Launch Browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n        \n//To fetch some url.\nawait driver?.get(\"https://www.selenium.dev/selenium/web/web-form.html\");\n\n// To send a search query by passing the value in searchString.\nawait driver\n?.findElement(By?.css('[name=\"my-file\"]'))\n?.sendKeys(\"C:\\\\Users\\\\alan_\\\\Downloads\\\\Peepo.png\");\n//assertion\nlet fileName = await driver\n?.findElement(By?.css(' [name=\"my-file\"]'))\n?.getAttribute(\"value\")\n.then(function(value){\n        return value.match(/(?<=[\\w\\\\])([\\w])+(?=\\.)/g)[0]\n});\n\n        \n// //assertion Node\n// assert.strictEqual(todoText, \"Three\")\n//assert using chai should\nfileName.should.include(\"Peepo\")\n//Something to do \nawait new Promise(res => setTimeout(res, 10000));\nlet title = await driver.getTitle();\nconsole.log('Title is :',title);\nconsole.log('File name is :',fileName);\n        \n//Close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "380654e8-6f5a-471c-9c03-aa6b25b2e8f1",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "380654e8-6f5a-471c-9c03-aa6b25b2e8f1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11728,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "trainingFilename",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "C:/Selenium/SeleniumTestingProjects/SeleniumTraining/reportTraining",
        "reportFilename": "trainingFilename"
      },
      "version": "6.2.0"
    }
  }
}